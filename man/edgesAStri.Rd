% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ArcSliceUGFunctions.R
\name{edgesAStri}
\alias{edgesAStri}
\title{The edges of the underlying or reflexivity graph of
the Arc Slice Proximity Catch Digraph (AS-PCD) for 2D data -
one triangle case}
\usage{
edgesAStri(Xp, tri, M = "CC", ugraph = c("underlying", "reflexivity"))
}
\arguments{
\item{Xp}{A set of 2D points
which constitute the vertices of the underlying or reflexivity graph of the AS-PCD.}

\item{tri}{A \eqn{3 \times 2} matrix with each row
representing a vertex of the triangle.}

\item{M}{The center of the triangle.
\code{"CC"} stands for circumcenter of the triangle \code{tri}
or a 2D point in Cartesian coordinates or a 3D point in
barycentric coordinates
which serves as a center in the interior of the triangle \eqn{T_b};
default is \code{M="CC"}, i.e., the circumcenter of \code{tri}.}

\item{ugraph}{The type of the graph based on AS-PCDs,
\code{"underlying"} is for the underlying graph, and \code{"reflexivity"} is for
the reflexivity graph (default is \code{"underlying"}).}
}
\value{
A \code{list} with the elements
\item{type}{A description of the underlying
or reflexivity graph of the digraph}
\item{parameters}{Parameters of the underlying or reflexivity graph of the digraph,
here, it is only the center \code{M} used to construct the vertex regions.}
\item{tess.points}{Tessellation points, i.e., points on which the tessellation of
the study region is performed,
here, tessellation is the support triangle.}
\item{tess.name}{Name of the tessellation points \code{tess.points}}
\item{vertices}{Vertices of the underlying
or reflexivity graph of the digraph, \code{Xp} points}
\item{vert.name}{Name of the data set
which constitutes the vertices of
the underlying or reflexivity graph of the digraph}
\item{LE, RE}{Left and right end points of the edges of
the underlying or reflexivity graph of AS-PCD for 2D data set \code{Xp}
as vertices of the underlying or reflexivity graph of the digraph}
\item{mtitle}{Text for \code{"main"} title
in the plot of the underlying or reflexivity graph of the digraph}
\item{quant}{Various quantities for the underlying or reflexivity graph of the digraph:
number of vertices, number of partition points,
number of intervals, number of edges, and edge density.}
}
\description{
An object of class \code{"UndPCDs"}.
Returns edges of the underlying or reflexivity graph of AS-PCD
as left and right end points
and related parameters and the quantities of these graphs.
The vertices of these graphs are the data points in \code{Xp}
in the multiple triangle case.

AS proximity regions are constructed
with respect to the triangle \code{tri}, i.e.,
edges may exist only for points inside \code{tri}.
It also provides various descriptions
and quantities about the edges of
the underlying or reflexivity graph of the AS-PCD
such as number of edges, edge density, etc.

Vertex regions are based on the center, \eqn{M=(m_1,m_2)} in Cartesian coordinates
or \eqn{M=(\alpha,\beta,\gamma)} in barycentric coordinates
in the interior of the triangle \code{tri}
or based on circumcenter of  \code{tri};
default is \code{M="CC"}, i.e., circumcenter of \code{tri}.
The different consideration of circumcenter vs
any other interior center of the triangle is because
the projections from circumcenter are orthogonal to the edges,
while projections of \code{M} on the edges are on the extensions
of the lines connecting \code{M} and the vertices.

See also (\insertCite{ceyhan:Phd-thesis,ceyhan:stamet2016;textual}{pcds.ugraph}).
}
\examples{
\dontrun{
A<-c(1,1); B<-c(2,0); C<-c(1.5,2);
Tr<-rbind(A,B,C);
n<-10

set.seed(1)
Xp<-pcds::runif.tri(n,Tr)$g

M<-as.numeric(pcds::runif.tri(1,Tr)$g)  #try also M<-c(1.6,1.0)

#for underlying graph
Edges<-edgesAStri(Xp,Tr,M)
#for reflexivity graph, try Edges<-edgesAStri(Xp,Tr,M,ugraph="r")
#or try with the default center Edges<-edgesAStri(Xp,Tr); M= (Edges$param)$cent
Edges
summary(Edges)
plot(Edges)

#for reflexivity graph
Edges<-edgesAStri(Xp,Tr,M,ugraph="r")
#or try with the default center Edges<-edgesAStri(Xp,Tr); M= (Edges$param)$cent
Edges
summary(Edges)
plot(Edges)

#can add vertex regions
#but we first need to determine center is the circumcenter or not,
#see the description for more detail.
CC<-pcds::circumcenter.tri(Tr)
if (isTRUE(all.equal(M,CC)))
{cent<-CC
D1<-(B+C)/2; D2<-(A+C)/2; D3<-(A+B)/2;
Ds<-rbind(D1,D2,D3)
cent.name<-"CC"
} else
{cent<-M
cent.name<-"M"
Ds<-pcds::prj.cent2edges(Tr,M)
}
L<-rbind(cent,cent,cent); R<-Ds
segments(L[,1], L[,2], R[,1], R[,2], lty=2)

#now we can add the vertex names and annotation
txt<-rbind(Tr,cent,Ds)
xc<-txt[,1]+c(-.02,.02,.02,.02,.03,-.03,-.01)
yc<-txt[,2]+c(.02,.02,.03,.06,.04,.05,-.07)
txt.str<-c("A","B","C","M","D1","D2","D3")
text(xc,yc,txt.str)
}

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{edgesAS}}, \code{\link{edgesPEtri}},
\code{\link{edgesCStri}}, and \code{\link[pcds]{arcsAStri}}
}
\author{
Elvan Ceyhan
}
